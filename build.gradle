plugins {
    id "com.github.spotbugs" version "5.0.12"
    id "checkstyle"
}
apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = 'Main'

compileJava.options.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    // JUnit Jupiter (JUnit 5) dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'com.io7m.xom:xom:1.2.+'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.+'
    implementation 'org.json:json:20231013'
}
test {
    useJUnitPlatform()
    include '**/InventoryTest.class'
    include '**/*Test.class'
}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}


checkstyle {
    // Keep checkstyle a little quieter
    toolVersion = '8.8'  // Specify the Checkstyle version you are using
    config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle).configureEach {

    reports {
        html.enabled = true
        xml.enabled = false
    }
}
///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
spotbugs {
    ignoreFailures = true
    showProgress = true
    effort = 'max'
}